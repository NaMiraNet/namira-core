version: 2

before:
  hooks:
    - go mod tidy
    - go mod verify

builds:
  - id: namira-core
    binary: namira-core
    main: ./cmd/namira-core
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    goarm:
      - "7"
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X main.version={{ .Version }}
      - -X main.date={{ .Date }}
      - -X main.commit={{ .ShortCommit }}
    tags:
      - netgo
      - osusergo

archives:
  - id: default
    formats: ["tar.gz"]
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    files:
      - LICENSE*
      - README*
      - CHANGELOG*
      - .env.example
    format_overrides:
      - goos: windows
        formats: ["zip"]

checksum:
  name_template: "checksums.txt"
  algorithm: sha256

changelog:
  use: github
  sort: asc
  abbrev: 0
  groups:
    - title: '🚀 Features'
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
    - title: '🐛 Bug Fixes'
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
    - title: '📚 Documentation'
      regexp: '^.*?docs(\(.+\))??!?:.+$'
      order: 2
    - title: "🔧 Improvements"
      regexp: "^.*refactor[(\\w)]*:+.*$"
      order: 3
    - title: '🔧 Maintenance'
      regexp: '^.*?(build|ci|chore)(\(.+\))??!?:.+$'
      order: 4
    - title: "📚 Documentation"
      regexp: "^.*docs?[(\\w)]*:+.*$"
      order: 5
    - title: "Others"
      order: 999
  filters:
    exclude:
      - '^test:'
      - '^style:'
      - Merge pull request
      - Merge branch

release:
  github:
    owner: NamiraNet
    name: namira-core
  draft: false
  prerelease: auto
  mode: replace
  header: |
    # 🎉 {{ .ProjectName }} {{ .Version }}
    **Release Date:** {{ .Date }}

    High-performance proxy configuration checker and validator.
    # 📦 Installation

    ## Quick Install (Linux/macOS)

    ### Download and install latest version
    ```
    curl -sSL "https://github.com/NamiraNet/namira-core/releases/download/{{ .Tag }}/namira-core_{{ .Version }}_$(uname -s)_$(uname -m).tar.gz" | tar -xz
    chmod +x namira-core
    sudo mv namira-core /usr/local/bin/
    ```

    ### Or download binary directly from assets below


    ## Docker

    ```
    docker run --rm -p 8080:8080 ghcr.io/namiranet/namira-core:{{ .Version }}
    ```

    # 🚀 Quick Start


    ## Start API server
    ```
    namira-core api --port 8080
    ```

    ## Check health
    ```
    curl http://localhost:8080/health
    ```

    ## Test configurations
    ```
    curl -X POST http://localhost:8080/scan \
        -H "Content-Type: application/json" \
        -d '{"configs": ["vmess://..."]}'
    ```

    ## What's New
    
  footer: |
    ---
    
    **Checksums**: `checksums.txt` • **Docker**: `ghcr.io/namiranet/namira-core:{{ .Version }}`
    
    [📖 Docs](https://github.com/NamiraNet/namira-core#readme) • [🐛 Issues](https://github.com/NamiraNet/namira-core/issues) • [💬 Discussions](https://github.com/NamiraNet/namira-core/discussions)

dockers:
  - image_templates:
      - "ghcr.io/namiranet/namira-core:{{ .Version }}"
      - "ghcr.io/namiranet/namira-core:latest"
    dockerfile: Dockerfile.goreleaser
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
      - "--label=org.opencontainers.image.source=https://github.com/NamiraNet/namira-core"
      - "--platform=linux/amd64"


nfpms:
  - id: packages
    package_name: namira-core
    vendor: NamiraNet
    homepage: "https://github.com/NamiraNet/namira-core"
    maintainer: "NamiraNet <namiranet@proton.me>"
    description: "High-performance VPN configuration checker and validator"
    license: AGPL-3.0
    formats:
      - deb
      - rpm
    bindir: /usr/bin
    contents:
      - src: .env.example
        dst: /etc/namira-core/.env.example
        type: config