services:
  namira:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        BUILD_DATE: ${BUILD_DATE}
        COMMIT_SHA: ${COMMIT_SHA}
    container_name: namira-core
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0
      REDIS_ADDR: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_DB: ${REDIS_DB:-0}
      GEOLOCATION_DB_PATH: /app/GeoLite2-Country.mmdb
      GITHUB_SSH_KEY_PATH: /home/namira/.ssh/id_rsa
      GITHUB_OWNER: ${GITHUB_OWNER}
      GITHUB_REPO: ${GITHUB_REPO}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      APP_TIMEOUT: ${APP_TIMEOUT:-10s}
      MAX_CONCURRENT: ${MAX_CONCURRENT:-50}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      SSH_KNOWN_HOSTS: /home/namira/.ssh/known_hosts
    user: namira
    volumes:
      - ${GEOLOCATION_DB_PATH:-./GeoLite2-Country.mmdb}:/app/GeoLite2-Country.mmdb:ro
      - ${GITHUB_SSH_KEY_PATH:-~/.ssh/id_rsa}:/home/namira/.ssh/id_rsa:ro
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - namira-network
    healthcheck:
      test: ["CMD", "./namira-core", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis:
    image: redis:8-alpine
    container_name: namira-redis
    restart: unless-stopped
    command: redis-server ${REDIS_PASSWORD:+--requirepass ${REDIS_PASSWORD}} --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - namira-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  redis_data:

networks:
  namira-network:
    driver: bridge